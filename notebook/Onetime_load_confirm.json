{
	"name": "Onetime_load_confirm",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "PoolA",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "010dec89-a6ba-415c-815c-5bc0ee28220f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/014ff8fc-ea99-4a9f-b5ec-a71518e2f48c/resourceGroups/Az_Dev/providers/Microsoft.Synapse/workspaces/azdevsynapse/bigDataPools/PoolA",
				"name": "PoolA",
				"type": "Spark",
				"endpoint": "https://azdevsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/PoolA",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"from pyspark.sql import SparkSession \n",
					"from pyspark.sql.types import * \n",
					"\n",
					"table_name = 'EXPORT_CUSTOMER_INFO.parquet'\n",
					"\n",
					"confirm_table_name = table_name.replace(\"EXPORT\", \"confirm\")\n",
					"\n",
					"blob_account_name = \"isourcedev11282024\"\n",
					"blob_container_name = \"raw-dev\"\n",
					"\n",
					"sc = SparkSession.builder.getOrCreate()\n",
					"\n",
					"# mount raw layer \n",
					"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\n",
					"blob_sas_token = token_library.getConnectionString(\"az_isource_blob\")\n",
					"\n",
					"spark.conf.set(\n",
					"    'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"    blob_sas_token)\n",
					"\n",
					"# target confirm layer\n",
					"account_name = 'azdevsynapse' \n",
					"container_name = 'confirm'  \n",
					"\n",
					"adls_path = 'abfss://%s@%s.dfs.core.windows.net/' % (container_name, account_name) \n",
					"print('Primary storage account path: ' + adls_path) \n",
					"\n",
					"wasb_path = 'wasbs://raw-dev@isourcedev11282024.blob.core.windows.net/%s' % (table_name)\n",
					"\n",
					"    \n",
					"data = spark.read.load(wasb_path, format='parquet') \n",
					"\n",
					"\n",
					"# Write spark dataframe as a parquet file \n",
					"parquet_path = adls_path + confirm_table_name\n",
					"data.write.parquet(parquet_path, mode = 'overwrite') \n",
					""
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}